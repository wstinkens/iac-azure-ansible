  - name: Create {{ node.name }} public IP address in {{ node.resourcegroup }}
    azure_rm_publicipaddress:
      resource_group: "{{ node.resourcegroup }}"
      allocation_method: Dynamic
      name: "{{ node.name }}-pip"

  - name: Print {{ node.name }} public IP address
    debug: 
      var: piptask_result.state.ip_address
      verbosity: 2

  - name: Create {{ node.name }} virtual network inteface card in {{ node.resourcegroup }}
    azure_rm_networkinterface:
      resource_group: "{{ node.resourcegroup }}"
      name: "{{ node.name }}-nic"
      virtual_network: "{{ node.vnet }}"
      subnet: "{{ node.subnet }}"
      public_ip_name: "{{ node.name }}-pip"

  - name: Create {{ node.name }} virtual machine in {{ node.resourcegroup }}
    azure_rm_virtualmachine:
      resource_group: "{{ node.resourcegroup }}"
      name: "{{ node.name }}"
      vm_size: "{{ node.nodesize }}"
      admin_username: "{{admin_user}}"
      ssh_password_enabled: false
      ssh_public_keys: 
        - path: "/home/{{admin_user}}/.ssh/authorized_keys"
          key_data: "{{ssh_key}}"
      network_interfaces: "{{ node.name }}-nic"
      image:
        offer: "{{ nodeimage.offer}}"
        publisher: "{{ nodeimage.publisher }}"
        sku: "{{ nodeimage.sku }}"
        version: "{{ nodeimage.version }}"

  - name: Create {{ node.name }} public IP address in {{ node.resourcegroup }}
    azure_rm_publicipaddress:
      resource_group: "{{ node.resourcegroup }}"
      allocation_method: Dynamic
      name: "{{ node.name }}-pip"
    register: piptask_result
    until: piptask_result.state.ip_address is defined
    retries: 5
    delay: 10

  - name: Print {{ node.name }} public IP address
    debug: 
      var: piptask_result.state.ip_address
      verbosity: 2

  - name: Set prod proxy IP fact
    set_fact:
      prod_proxy_ip: "{{ piptask_result.state.ip_address }}"
    when: node.name == prod_proxy

  - name: Set mgmt proxy IP fact
    set_fact:
      mgmt_proxy_ip: "{{ piptask_result.state.ip_address }}"
    when: node.name == mgmt_proxy
  
  - name: create A record {{ node.dnsname }} for {{ node.name }} in DNS Zone {{ dns_zone }}
    azure_rm_dnsrecordset:
      resource_group: "{{ dns_resourcegroup }}"
      relative_name: "{{ node.dnsname }}"
      zone_name: "{{ dns_zone }}"
      record_type: A
      state: present
      records:
        - entry: "{{ mgmt_proxy_ip }}"
    when: 
      - node.dnsname is defined
      - node.dnsname != "bastion"
      - node.resourcegroup == mgmt_resourcegroup

  - name: create A record {{ node.dnsname }} for {{ node.name }} in DNS Zone {{ dns_zone }}
    azure_rm_dnsrecordset:
      resource_group: "{{ dns_resourcegroup }}"
      relative_name: "{{ node.dnsname }}"
      zone_name: "{{ dns_zone }}"
      record_type: A
      state: present
      records:
        - entry: "{{ prod_proxy_ip }}"
    when: 
      - node.dnsname is defined
      - node.dnsname != "bastion"
      - node.resourcegroup == prod_resourcegroup

  - name: create A record {{ node.dnsname }} for {{ node.name }} in DNS Zone {{ dns_zone }}
    azure_rm_dnsrecordset:
      resource_group: "{{ dns_resourcegroup }}"
      relative_name: "{{ node.dnsname }}"
      zone_name: "{{ dns_zone }}"
      record_type: A
      state: present
      records:
        - entry: "{{ piptask_result.state.ip_address }}"
    when:
      - node.dnsname is defined
      - node.dnsname == "bastion"

  - name: add {{ node.name }} host to in memory inventory
    add_host:
      hostname: "{{ piptask_result.state.ip_address }}"
      groups: "{{ item }}"
    loop: "{{ node.groups }}"